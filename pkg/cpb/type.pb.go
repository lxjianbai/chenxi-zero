// 声明 proto 语法版本，固定值

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: type.proto

// proto 包名

package cpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OperatingCurrency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	MemberId uint32 `protobuf:"varint,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	// 资产id
	CurrencyId uint32 `protobuf:"varint,2,opt,name=currencyId,proto3" json:"currencyId,omitempty"`
	// 变动数量
	Num float64 `protobuf:"fixed64,3,opt,name=num,proto3" json:"num,omitempty"`
	// 账本类型
	TypeId uint32 `protobuf:"varint,4,opt,name=typeId,proto3" json:"typeId,omitempty"`
	// 收入、支出
	NumberType OperatingCurrencyEnum `protobuf:"varint,5,opt,name=numberType,proto3,enum=cpb.OperatingCurrencyEnum" json:"numberType,omitempty"`
	// 第三方id
	ThirdId uint32 `protobuf:"varint,6,opt,name=thirdId,proto3" json:"thirdId,omitempty"`
	// (减少资产时是否把扣除的放到冻结)(增加资产时是否把冻结的减少)，true:是，false:否(默认)
	IsFrozen bool `protobuf:"varint,7,opt,name=isFrozen,proto3" json:"isFrozen,omitempty"`
	// 手续费数量(只有扣除时用到,num的数量不包括手续费数量的)
	Fee float64 `protobuf:"fixed64,8,opt,name=fee,proto3" json:"fee,omitempty"`
	// 相对的用户id   目标对象ID(当时抽奖记录时候存储订单编号)
	ToMemberId uint32 `protobuf:"varint,9,opt,name=toMemberId,proto3" json:"toMemberId,omitempty"`
	// 管理员备注（当抽奖记录时候存储抽奖奖券)
	AdRemark string `protobuf:"bytes,10,opt,name=adRemark,proto3" json:"adRemark,omitempty"`
}

func (x *OperatingCurrency) Reset() {
	*x = OperatingCurrency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_type_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatingCurrency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatingCurrency) ProtoMessage() {}

func (x *OperatingCurrency) ProtoReflect() protoreflect.Message {
	mi := &file_type_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatingCurrency.ProtoReflect.Descriptor instead.
func (*OperatingCurrency) Descriptor() ([]byte, []int) {
	return file_type_proto_rawDescGZIP(), []int{0}
}

func (x *OperatingCurrency) GetMemberId() uint32 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OperatingCurrency) GetCurrencyId() uint32 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *OperatingCurrency) GetNum() float64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *OperatingCurrency) GetTypeId() uint32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *OperatingCurrency) GetNumberType() OperatingCurrencyEnum {
	if x != nil {
		return x.NumberType
	}
	return OperatingCurrencyEnum_OperatingCurrencyUnknow
}

func (x *OperatingCurrency) GetThirdId() uint32 {
	if x != nil {
		return x.ThirdId
	}
	return 0
}

func (x *OperatingCurrency) GetIsFrozen() bool {
	if x != nil {
		return x.IsFrozen
	}
	return false
}

func (x *OperatingCurrency) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *OperatingCurrency) GetToMemberId() uint32 {
	if x != nil {
		return x.ToMemberId
	}
	return 0
}

func (x *OperatingCurrency) GetAdRemark() string {
	if x != nil {
		return x.AdRemark
	}
	return ""
}

var File_type_proto protoreflect.FileDescriptor

var file_type_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x63, 0x70,
	0x62, 0x1a, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x02,
	0x0a, 0x11, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6e, 0x75,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x63, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x68, 0x69, 0x72, 0x64, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x68, 0x69, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x73, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x6f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x63,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_type_proto_rawDescOnce sync.Once
	file_type_proto_rawDescData = file_type_proto_rawDesc
)

func file_type_proto_rawDescGZIP() []byte {
	file_type_proto_rawDescOnce.Do(func() {
		file_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_type_proto_rawDescData)
	})
	return file_type_proto_rawDescData
}

var file_type_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_type_proto_goTypes = []interface{}{
	(*OperatingCurrency)(nil),  // 0: cpb.OperatingCurrency
	(OperatingCurrencyEnum)(0), // 1: cpb.OperatingCurrencyEnum
}
var file_type_proto_depIdxs = []int32{
	1, // 0: cpb.OperatingCurrency.numberType:type_name -> cpb.OperatingCurrencyEnum
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_type_proto_init() }
func file_type_proto_init() {
	if File_type_proto != nil {
		return
	}
	file_enum_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_type_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperatingCurrency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_type_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_type_proto_goTypes,
		DependencyIndexes: file_type_proto_depIdxs,
		MessageInfos:      file_type_proto_msgTypes,
	}.Build()
	File_type_proto = out.File
	file_type_proto_rawDesc = nil
	file_type_proto_goTypes = nil
	file_type_proto_depIdxs = nil
}
